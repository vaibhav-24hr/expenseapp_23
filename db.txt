open mysql 
	
	database create 
	
	create database expenseapp; 
	
	use expenseapp; 
	
	create table users (
		userId integer primary key auto_increment,
		firstName varchar(30),
		lastName varchar(30),
		email varchar(50),
		password varchar(80),
		role integer
	);
	
	1 -> admin 
	2 -> user/buyer 
	
	desc users;
	
	
insert into users (firstName,lastName,email,password,role) 
	values ('ram','sita','ram@sita.com','ravan');
	
	// Add Column in Table
alter table users add otp varchar(10); 


update user set otp = ? where email = ? 


-----------------------------------------

create table category(
	categoryId integer primary key auto_increment,
	categoryName varchar(30),
	deleted boolean  
);

create table subcategory(
	subCategoryId integer primary key auto_increment,
	subCategoryName varchar(30),
	categoryId integer references category(categoryId)
);

-------------------------------------------------------------

Expense Table

create table expense(
	expenseId integer primary key auto_increment,
	title varchar(30),
	categoryId integer references category(categoryId),
	subCategoryId integer references subcategory(subcategoryId),
	vendorId integer references vendor(vendorId),
	accountTypeId integer references accountType(accountTypeId),
	statusId integer references status(statusId),
	amount integer,
	date varchar(30),
	description varchar(150),
	userId integer integer references users(userId)
	);
	 
-----------------------------------------------------------------------

To Rename Column Name

alter table expense rename column amount to ammount;


--------------------------------------------------------------------------
delete Row in dataTable

delete from subcategory where subCategoryId = 17;

-------------------------------------------------------------------------

update subcategory set subCategoryName = '' where subCategoryId =  ;

------------------------------------------------------------------------------

Multiple row Deleted

delete from expense where expenseId in (5,6);



---------------------------------------------------------------------------------

Table Income

create table income(
    -> incomeId integer primary key auto_increment,
    -> title varchar(30),
    -> date varchar(30),
    -> userId integer references users(userId),
    -> accountTypeId integer references accountType(accountTypeId),
    -> description varchar(150),
    -> statusId integer references status(statusId),
    -> ammount integer
    -> );



-----------------------------------------------------------------------------------------

View Expense Content

Expense Query

select e.title, e.ammount, e.date, e.description, c.categoryName, sc.subcategoryName, v.vendorName, a.accountType, s.statusShow from expense e, category c, subcategory sc, vendor v, accountType a, status s where e.categoryId = c.categoryId and e.subCategoryId = sc.subCategoryId and e.vendorId = v.vendorId and e.accountTypeId = a.accountTypeId and e.statusId = s.statusId and userId = ?; 

















// Some Useful Queries

    insert into income (userId, date, title, accountTypeId, description, statusId, ammount) values (11, '2023-03-27', 'Stock Market', 2, 'profit in treding', 5, 50000);
    
    select sum(ammount) from income where date like '2023-%';
    
    delete from income where incomeId = 6;
    
    update users set gender = 'male' where userId in (7,8,9,10,11,12,18);
    
     update users set joindate = '01-03-2023' where userId in (7);
     
     select count(*) from users where joindate = '08-03-2023';
     
     select count(*) from users where joindate like '%-03-%';
     
     select count(*) from users where joindate like '%-03-2023';
     
      SELECT COUNT(*) FROM users WHERE joindate BETWEEN '2023-03-01' AND '2023-03-31';
  
---------------------------------------------------------------------------------------------------------------------------------------------------------
1).select MONTH(date) ,sum(ammount) from expense group by month(date); 
---> above Query will give you Month Number and Monthly Expense Ammount 

2). select MONTH(date) as month ,sum(ammount) as expenseAmmount from expense group by month(date);
--->  Abobe Query will give same output as mentioned above but it will Change the column Name "(*) As Month & (*) As expenseAmmount"  (Alias)  

3). select MONTH(date) as month ,sum(ammount) as expenseAmmount from expense group by month(date) order by MONTH(date);
---> Update from Above -> order by MONTH(date) <=> ABove updation Query givr data in Accending Month Data

4). select MONTH(date) as month ,sum(ammount) as expenseAmmount from expense group by month(date) order by MONTH(date) desc;
--->  Update from Above -> order by MONTH(date) desc <=> Give Data in Descendin Order Month [ex(12 to 1 where 12=december)]

5). select monthname(date) as month ,sum(ammount) as expenseAmmount from expense group by monthname(date) order by month(date);
---> Update from Above -> monthname(date) this will give data by Month Name (May,April) in accending order by order by MONTH(date)

6). select monthname(date) as month , sum(ammount) as expenseAmmount from expense where year(date) = 2023 group by monthname(date) order by monthname(date);
---> update from Above -> where year(date) = 2023 <=> above query will give data of All month of current year

7). select monthname(date) as month , sum(ammount) as expenseAmmount from expense where year(date) = 2023 group by monthname(date),month(date)  order by month(date);
---> update from Above -> group by monthname(date),month(date)  order by month(date); <=> This Query Will give data of assending order by Month Name
------------------------------------------------------------------------------------------------------------------------------------------------------------------

select monthname(orderdate) as month , sum(totalAmount) as orderAmount from orders where year(orderDate) = 2023 group by monthname(orderdate) order by month(orderDate);


Each Users Number of Expenses
--> select userId , count(expenseId) from expense group by userId;



-----------------------------------------------------------------------------------
 FOR uopload image add URL Data for 1024 char(1024)
--> alter table users add column imageUrl varchar(1024);

To upload imgae We need to add these maven dependencies

apache commons 
	io
	file-upload

-------------------------------------------------------






















